image: python:3.8-alpine

stages:
  - build
  - test
  - release
  - deploy

.before_script_template:
  before_script:
    - pip3 install wheel
    - pip install pathlib

cache:
  key: one-key-to-rule-them-all
  paths:
    - .pytest_cache/
    - build/
    - dist/
    - package.egg-info/

build:
  extends: .before_script_template
  stage: build
  script:
    - python3.8 setup.py bdist_wheel
  only:
    - master

test:
  extends: .before_script_template
  stage: test
  script:
    - apk add --no-cache gcc libc-dev unixodbc-dev libffi-dev
    - pip3 install -r requirements/development.txt
    - pytest tests --cov package
  only:
    - master

release:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
    - docker build -t ${DOCKER_LOGIN}/${NAME_PROJECT}:${CI_PIPELINE_ID} .
    - docker push ${DOCKER_LOGIN}/${NAME_PROJECT}:${CI_PIPELINE_ID}
  only:
    - master

deploy:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - kubectl create -f site.yaml
    - kubectl create -f service.yaml
    - kubectl apply -f deployment.yaml
  only:
    - master